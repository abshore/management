<?phpnamespace User\CommunicationBundle\Controller;use Symfony\Bundle\FrameworkBundle\Controller\Controller;use User\CommunicationBundle\Entity\Message;use User\CommunicationBundle\Form\Type\MessageType;use User\CommunicationBundle\Form\Type\MessageReponseType;use User\CommunicationBundle\Form\Type\MessageTransfType;class MessageController extends Controller{        public function accueilAction()    {        	$em=$this->get('Doctrine')->getManager();        $one= $this->get('security.context')->getToken()->getUser();	$msg=$em->getRepository('UserCommunicationBundle:Message')->findBy( array('destination' => $one->getUsername()));	$list=$em->getRepository('UserCommunicationBundle:Message')->findBy( array('destination' => $one->getUsername(),'msglu'=> 0));	$count=0;	if ($list!=null) {$count=count($list);}	return $this->render('UserCommunicationBundle:Message:accueil.html.twig',array('msg'=>$msg,'count'=>$count));	}    public function indexAction()    {	$msg=new Message;	$form = $this->createForm(new MessageType(), $msg);	$request = $this->get('request'); // On r�cup�re l'objet request via le service container        if ('POST' == $request->getMethod()) { // Si on a post� le formulaire        $form->bind($request); // On bind les donn�es du form        if ($form->isValid()) { // Si le formulaire est valide            $one= $this->get('security.context')->getToken()->getUser();			$em=$this->get('Doctrine')->getManager();            if($msg->getPieceJointe()!=null)			$msg->upload($one->getId());          			$msg->setUser($one);			$message = \Swift_Message::newInstance();			$message->setSubject("Objet");			$message->setFrom($one->getEmail());			$message->setTo($msg->getDestination()->getEmail());			// pour envoyer le message en HTML			$message->setBody('<p>Le contact : '.$one->getUsername().' ('.$one->getEmail().' ) vous a envoye un message.<br> Voila son contenu : <br>'.$msg->getCorps().'</p>','text/html'); 			if($msg->getPieceJointe()!=null)			$message->attach(\Swift_Attachment::fromPath($msg->getPieceJointe())) ;			//envoi du message		        $this->get('mailer')->send($message);			$msg->setDestination($msg->getDestination()->getusername());//le premier get renvoi objet user dans le champ destination et le deuxieme get pour tirer de l'objet le username			$msg->setDatemsg(new \DateTime());			$msg->setMsglu(0);			$em->persist($msg);			$em->flush();            // On redirige vers la page de modification du bureau            return $this->redirect($this->generateUrl('accueil'));        }		    }	return $this->render('UserCommunicationBundle:Message:index.html.twig', array(            'form' => $form->createView(),        ));	    }	public function voirAction()    {$em=$this->get('Doctrine')->getManager();$one= $this->get('security.context')->getToken()->getUser(); $list=$em->getRepository('UserCommunicationBundle:Message')->findBy( array('destination' => $one->getUsername()),    array('id' => 'DESC'));    $paginator  = $this->get('knp_paginator');    $pagination = $paginator->paginate(        $list,        $this->get('request')->query->get('page', 1)/*page number*/,        10/*limit per page*/    );       return $this->render('UserCommunicationBundle:Message:voir.html.twig',array('list'=>$list,'pagination'=>$pagination));    }	public function detailAction($id)    { $em=$this->get('Doctrine')->getManager(); $list=$em->getRepository('UserCommunicationBundle:Message')->find($id); $list->setMsglu(1);	$em->persist($list);	$em->flush();       return $this->render('UserCommunicationBundle:Message:detail.html.twig',array('list'=>$list));    }        public function detailenvoiAction($id)    { $em=$this->get('Doctrine')->getManager(); $list=$em->getRepository('UserCommunicationBundle:Message')->find($id); $em->persist($list); $em->flush();       return $this->render('UserCommunicationBundle:Message:detailenvoi.html.twig',array('list'=>$list));    }        	public function reponseAction($id)    {        $msg=new Message;	$em=$this->get('Doctrine')->getManager();	$msag=$em->getRepository('UserCommunicationBundle:Message')->find( $id);	$username=$msag->getUser()->getUsername();		$msg->setDestination($username);	$form = $this->createForm(new MessageReponseType(), $msg);	$request = $this->get('request'); // On r�cup�re l'objet request via le service container        if ('POST' == $request->getMethod()) { // Si on a post� le formulaire        $form->bind($request); // On bind les donn�es du form        if ($form->isValid()) { // Si le formulaire est valide            $one= $this->get('security.context')->getToken()->getUser();            $em=$this->get('Doctrine')->getManager();            if($msg->getPieceJointe()!=null)	    $msg->upload($one->getId());                                    			$msg->setUser($one);			$message = \Swift_Message::newInstance();			$message->setSubject("Objet");			$message->setFrom($one->getEmail());			$userr=$em->getRepository('GestionUserBundle:User')->find($msag->getUser()->getId());			$message->setTo($userr->getEmail());			// pour envoyer le message en HTML			$message->setBody('<p>Le contact : '.$one->getUsername().' ('.$one->getEmail().' ) vous a envoye un message.<br> Voila son contenu : <br>'.$msg->getCorps().'</p>','text/html'); 			if($msg->getPieceJointe()!=null)			$message->attach(\Swift_Attachment::fromPath($msg->getPieceJointe())) ;			//envoi du message		        $this->get('mailer')->send($message);			//retour au formulaire                        $msg->setDestination($username);                        $msg->setDatemsg(new \DateTime());			$msg->setMsglu(0);			$em->persist($msg);			$em->flush();            // On redirige vers la page de modification du bureau            return $this->redirect($this->generateUrl('accueil'));        }    }	return $this->render('UserCommunicationBundle:Message:reponse.html.twig', array(            'form' => $form->createView()        ));    }                public function reponseTransAction($id)    {        $msg=new Message;	$em=$this->get('Doctrine')->getManager();	$msag=$em->getRepository('UserCommunicationBundle:Message')->find( $id);	//$username=$msag->getUser()->getUsername();		        $msg->setSubject($msag->getSubject());        $msg->setCorps($msag->getCorps());        $msg->setPieceJointe($msag->getFilename());        $msg->setFilename($msag->getFilename());        	$form = $this->createForm(new MessageTransfType(), $msg);	$request = $this->get('request'); // On r�cup�re l'objet request via le service container        if ('POST' == $request->getMethod()) { // Si on a post� le formulaire        $form->bind($request); // On bind les donn�es du form        if ($form->isValid()) { // Si le formulaire est valide            $one= $this->get('security.context')->getToken()->getUser();            $em=$this->get('Doctrine')->getManager();            $dest=$msg->getDestination();                                    $msg->setPieceJointe($msag->getPieceJointe());			$msg->setUser($one);			$message = \Swift_Message::newInstance();			$message->setSubject("Objet");			$message->setFrom($one->getEmail());			$userr=$em->getRepository('GestionUserBundle:User')->find($msag->getUser()->getId());			$message->setTo($userr->getEmail());			// pour envoyer le message en HTML			$message->setBody('<p>Le contact : '.$one->getUsername().' ('.$one->getEmail().' ) vous a envoye un message.<br> Voila son contenu : <br>'.$msg->getCorps().'</p>','text/html'); 			if($msg->getPieceJointe()!=null)			$message->attach(\Swift_Attachment::fromPath($msg->getPieceJointe())) ;			//envoi du message		        $this->get('mailer')->send($message);			//retour au formulaire                        //$msg->setDestination($username);                        $msg->setDatemsg(new \DateTime());			$msg->setMsglu(0);                       $dest=explode(";", $dest) ;                foreach( $dest as $dest_str)                 {                   $massag=new Message;                   $massag->setUser($one);                   $massag->setDestination($dest_str);                   $massag->setSubject($msg->getSubject());                   $massag->setCorps($msg->getCorps());                   $massag->setPieceJointe($msg->getPieceJointe());                   $massag->setFilename($msg->getFilename());                   $massag->setDatemsg(new \DateTime());                    $massag->setMsglu(0);                    $em->persist($massag);	            $em->flush();                }			            // On redirige vers la page de modification du bureau            return $this->redirect($this->generateUrl('accueil'));        }    }	return $this->render('UserCommunicationBundle:Message:reponse.html.twig', array(            'form' => $form->createView()        ));    }        			public function deleteAction($id)    { $em=$this->get('Doctrine')->getManager(); $list=$em->getRepository('UserCommunicationBundle:Message')->find($id);$em->remove($list);$em->flush();      //$list=$em->getRepository('UserCommunicationBundle:Message')->findAll();	       //return $this->render('UserCommunicationBundle:Message:voir.html.twig',array('list'=>$list));	   return $this->redirect($this->generateUrl('accueil'));    }			 public function msgenvoiAction()   {    $em=$this->get('Doctrine')->getManager();	$user= $this->get('security.context')->getToken()->getUser();	$list=$em->getRepository('UserCommunicationBundle:Message')->findBy( array('user' => $user));	 $paginator  = $this->get('knp_paginator');    $pagination = $paginator->paginate(        $list,        $this->get('request')->query->get('page', 1)/*page number*/,        10/*limit per page*/    );	return $this->render('UserCommunicationBundle:Message:msgenvoyes.html.twig',array('list'=>$list,'pagination'=>$pagination));         }			 public function downloadAction($id)   {     $em=$this->get('Doctrine')->getManager();     $doc=$em->getRepository('UserCommunicationBundle:Message')->find($id);       $fichier = $doc->getPieceJointe();      $format=$doc->getFilename();        $url  = 'http://localhost/universityhier/web/uploads/documents/e.jpg';       echo $fichier;    $path = 'C:/e.jpg';    $ch = curl_init($url);    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);    $data = curl_exec($ch);    curl_close($ch);    file_put_contents($path, $data);          }		}